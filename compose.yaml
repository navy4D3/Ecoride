services:
  php:
    # user: '${USER_ID}:${GROUP_ID}'
    build: ./docker/php #definis le chemin vers le fichier de build
    volumes:
      - .:/var/www:delegated #lien entre dossier local et volume Docker
    depends_on:
      - database
    networks:
      - app_network

  nginx:
    build: ./docker/nginx
    ports:
     - "8000:80"
    volumes:
      - ./public:/var/www/public:delegated
    depends_on:
     - php
    networks:
      - app_network           

  database:
    image: mariadb:10.7.3
    environment: #definition des variables d'environnement
      MARIADB_USER: root
      MARIADB_ROOT_PASSWORD: root
      MARIADB_DATABASE: app
      MARIADB_ALLOW_EMPTY_ROOT_PASSWORD: 'no'
    volumes:
      - database_data2:/var/lib/mysql:rw
      - ./var/mysql:/var/www/var 
    networks:
      - app_network

  mongodb:
    image: mongo
    restart: always
    ports:
      - "27018:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    networks:
      - app_network
    volumes:
      - mongodb_data:/data/db
    
  mongo-express:
    image: mongo-express
    restart: always
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_URL: mongodb://root:example@mongodb:27017/
      ME_CONFIG_BASICAUTH_ENABLED: true
      ME_CONFIG_BASICAUTH_USERNAME: mongoexpressuser
      ME_CONFIG_BASICAUTH_PASSWORD: mongoexpresspass
    networks:
      - app_network

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    environment:
      PMA_HOST : database
      PMA_USER: root
      PMA_PASSWORD: root
    ports:
      - "8082:80"
    networks:
      - app_network

  # adminer:
  #   image: adminer:latest
  #   depends_on:
  #     - database
  #   environment:
  #     APP_ENV: dev
  #     ADMINER_DESIGN: pepa-linha
  #     ADMINER_DEFAULT_SERVER: 
  #   ports:
  #     - "8082:8080"
  #   networks:
  #     - app_network
      
  # mailer:
  #   image: axllent/mailpit
  #   ports:
  #     - "1025:1025"
  #     - "8025:8025"
  #   environment:
  #     MP_SMTP_AUTH_ACCEPT_ANY: 1
  #     MP_SMTP_AUTH_ALLOW_INSECURE: 1
  #   networks:
  #     - app_network          

###> doctrine/mongodb-odm-bundle ###
  # mongodb:
    # In production, you may want to use a managed database service
    # image: mongodb/mongodb-atlas-local:latest
    # environment:
    #   - MONGODB_INITDB_DATABASE=${MONGODB_DB:-app}
    #   # You should definitely set a root username and password in production
    #   - MONGODB_INITDB_ROOT_USERNAME=${MONGODB_USERNAME:-}
    #   - MONGODB_INITDB_ROOT_PASSWORD=${MONGODB_PASSWORD:-}
    # volumes:
    #   - mongodb_data:/data/db:rw
      # You may use a bind-mounted host directory instead, so that it is harder to accidentally remove the volume and lose all your data!
      # - ./docker/mongodb/data:/data/db:rw
###< doctrine/mongodb-odm-bundle ###

networks:
  app_network:

volumes:
  database_data2:      
  mongodb_data:
###< doctrine/mongodb-odm-bundle ###
