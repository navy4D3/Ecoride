"use strict";
(self["webpackChunk"] = self["webpackChunk"] || []).push([["assets_js_addVoiture_js"],{

/***/ "./assets/js/addVoiture.js":
/*!*********************************!*\
  !*** ./assets/js/addVoiture.js ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   addVoiture: () => (/* binding */ addVoiture),
/* harmony export */   initAddVoitureFormBtns: () => (/* binding */ initAddVoitureFormBtns),
/* harmony export */   initUserVoitureBtns: () => (/* binding */ initUserVoitureBtns),
/* harmony export */   showAddVoitureForm: () => (/* binding */ showAddVoitureForm)
/* harmony export */ });
/* harmony import */ var _app__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../app */ "./assets/app.js");


function addVoiture(previousElementId) {
  var currentCarId = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;
  var fetchPath = currentCarId ? "/add-voiture?id=".concat(encodeURIComponent(currentCarId)) : "/add-voiture";
  fetch(fetchPath, {
    method: 'POST',
    headers: {
      'X-Requested-With': 'XMLHttpRequest' // important pour indiquer une requête AJAX
    }
  }).then(function (response) {
    return response.json();
  }).then(function (data) {
    // data.html contient ton formulaire rendu
    if (previousElementId) {
      document.getElementById(previousElementId).style.display = "none";
      var container = document.getElementById('body-content');
      if (container) {
        container.insertAdjacentHTML('beforeend', data.html);
        initMarqueInputInteraction();
        initAddVoitureFormBtns(previousElementId, currentCarId);
        if (currentCarId) {
          var currentVoiture = document.getElementById(currentCarId);
          document.getElementById('add_voiture_marque').value = currentVoiture.querySelector('.marque').innerHTML;
        }
      } else {
        console.error('Le container cible n\'existe pas : body-content');
      }
    }
  })["catch"](function (error) {
    return console.error('Erreur:', error);
  });
}
function initMarqueInputInteraction() {
  var marqueInput = document.getElementById('add_voiture_marque');
  var suggestionsBox = document.getElementById('suggestions-marque-box');
  var brands = JSON.parse(marqueInput.dataset.marqueList);
  var selected = false;
  marqueInput.addEventListener('input', function () {
    var query = this.value.toLowerCase();
    var filtered = brands.filter(function (brand) {
      return brand.toLowerCase().includes(query);
    }).slice(0, 10);
    suggestionsBox.innerHTML = '';
    selected = false;
    if (query !== "") {
      filtered.forEach(function (brand) {
        var li = document.createElement('li');
        li.textContent = brand;
        li.style.cursor = 'pointer';
        li.onclick = function () {
          marqueInput.value = brand;
          selected = true;
          suggestionsBox.innerHTML = '';
        };
        suggestionsBox.appendChild(li);
      });
    }
  });

  // marqueInput.form.addEventListener('submit', function (e) {
  //     if (!brands.includes(marqueInput.value)) {
  //         e.preventDefault();
  //         alert("Veuillez sélectionner une marque valide dans la liste.");
  //     }
  // });
}
function initAddVoitureFormBtns(divToShowId, currentCarId) {
  var currentDiv = document.getElementById('add-voiture-section');
  var addVoitureForm = document.getElementById("add-voiture-form");
  var addVoitureFormInputs = addVoitureForm.querySelectorAll('input, select, textarea');
  (0,_app__WEBPACK_IMPORTED_MODULE_0__.checkInputs)(addVoitureForm);
  addVoitureFormInputs.forEach(function (input) {
    input.addEventListener('input', function () {
      return (0,_app__WEBPACK_IMPORTED_MODULE_0__.checkInputs)(addVoitureForm);
    });
  });
  var backBtn = document.getElementById('add-voiture-back-btn');
  backBtn.addEventListener('click', function (e) {
    document.getElementById('add-voiture-section').style.display = "none";
    document.getElementById(divToShowId).style.display = "flex";
  });
  var immatriculationInput = document.getElementById('add_voiture_immatriculation');
  immatriculationInput.addEventListener('keydown', function (e) {
    if (e.key === ' ') {
      e.preventDefault();
    }
  });
  var selectColorInput = document.getElementById('add_voiture_couleur');
  var colorIndicator = document.getElementById('color-view');
  var colorMap = {
    'Blanc': '#ffffff',
    'Noir': '#000000',
    'Gris foncé': '#555555',
    'Gris clair': '#d3d3d3',
    'Rouge': '#ff0000',
    'Bleu': '#0000ff',
    'Vert': '#008000',
    'Jaune': '#ffff00',
    'Orange': '#ffa500',
    'Marron': '#8b4513',
    'Violet': '#800080',
    'Beige': '#f5f5dc',
    'Rose': '#ffc0cb'
  };
  function updateColor() {
    var selected = selectColorInput.value;
    if (selected === '') {
      //style placeholder
      selectColorInput.classList.add('select-color-placeholder');
    } else {
      selectColorInput.classList.remove('select-color-placeholder');
    }

    //style color indicator
    colorIndicator.style.backgroundColor = colorMap[selected] || 'transparent';
  }
  selectColorInput.addEventListener('change', updateColor);
  updateColor(); // initialise au chargement

  var placesInput = document.getElementById('add_voiture_places');
  placesInput.addEventListener('input', function () {
    var maxSeats = 9;
    var value = parseInt(this.value, 10);
    if (isNaN(value)) return;
    if (value < 2) {
      placesInput.value = 2;
    } else if (value > maxSeats) {
      placesInput.value = maxSeats;
    }
  });
  var showDeleteVoiturePopupBtn = document.getElementById('show-delete-voiture-popup');
  if (showDeleteVoiturePopupBtn) {
    var deleteVoiturePopup = document.getElementById('delete-voiture-popup');
    var deleteVoitureBtn = document.getElementById('delete-voiture');
    var _addVoitureForm = document.getElementById("add-voiture-form");
    showDeleteVoiturePopupBtn.addEventListener('click', function () {
      (0,_app__WEBPACK_IMPORTED_MODULE_0__.showPopup)(deleteVoiturePopup, 'flex');
    });
    deleteVoitureBtn.addEventListener('click', function (e) {
      e.preventDefault();
      fetch('delete-voiture/' + currentCarId, {
        method: 'POST',
        headers: {
          'X-Requested-With': 'XMLHttpRequest'
        }
      }).then(function (response) {
        if (!response.ok) {
          throw new Error('Erreur HTTP : ' + response.status);
        }
        return response.json();
      }).then(function (data) {
        if (data.status && data.status == "success") {
          document.getElementById(divToShowId).style.display = "flex";
          document.getElementById(currentCarId).remove();
          currentDiv.style.display = "none";
          (0,_app__WEBPACK_IMPORTED_MODULE_0__.showSuccessAlert)('Voiture supprimé avec succès');
          initUserVoitureBtns(divToShowId, currentCarId);
        } else {
          (0,_app__WEBPACK_IMPORTED_MODULE_0__.treatFormAlert)(_addVoitureForm, '', data);
          (0,_app__WEBPACK_IMPORTED_MODULE_0__.hidePopup)(deleteVoiturePopup);
        }
      });
    });
  }
  var submitAddVoitureFormBtn = document.getElementById('add-voiture-submit');
  submitAddVoitureFormBtn.addEventListener('click', function (e) {
    e.preventDefault();
    treatAddVoitureForm(divToShowId, currentCarId);
  });
}
function treatAddVoitureForm(divToShowId) {
  var currentCarId = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;
  var form = document.getElementById("add-voiture-form");
  var formData = new FormData(form);
  var currentDiv = document.getElementById('add-voiture-section');
  var fetchPath = currentCarId ? "/add-voiture?id=".concat(encodeURIComponent(currentCarId)) : "/add-voiture";
  fetch(fetchPath, {
    method: 'POST',
    body: formData,
    headers: {
      'X-Requested-With': 'XMLHttpRequest'
    }
  }).then(function (response) {
    if (!response.ok) {
      throw new Error('Erreur HTTP : ' + response.status);
    }
    return response.json();
  }).then(function (data) {
    if (data.status && data.status == "success") {
      document.getElementById(divToShowId).style.display = "flex";
      currentDiv.style.display = "none";
      var voituresListDiv = document.getElementById('user-voitures');
      if (!currentCarId) {
        var newVoitureDiv = document.createElement('div');
        newVoitureDiv.classList.add("voiture-card");
        newVoitureDiv.id = data.voiture.id;
        newVoitureDiv.innerHTML = "\n                    <span class=\"surnom\">".concat(data.voiture.surnom, "</span>\n                    <div>\n                        <span class=\"marque\">").concat(data.voiture.marque, "</span>\n                        <span class=\"modele\">").concat(data.voiture.modele, "</span>\n                        <span class=\"is-electric\">").concat(data.voiture.isElectric ? 'Electrique' : 'Thermique', "</span>\n                        <span class=\"places fw-bold\">").concat(data.voiture.places, " place").concat(data.voiture.places > 1 ? 's' : '', "</span>\n                    </div>\n                ");
        voituresListDiv.insertAdjacentElement('afterbegin', newVoitureDiv);
        (0,_app__WEBPACK_IMPORTED_MODULE_0__.showSuccessAlert)('Voiture ajouté avec succès');
      } else {
        var currentVoitureDiv = document.getElementById(currentCarId);
        currentVoitureDiv.innerHTML = "\n                    <span class=\"surnom\">".concat(data.voiture.surnom, "</span>\n                    <div>\n                        <span class=\"marque\">").concat(data.voiture.marque, "</span>\n                        <span class=\"modele\">").concat(data.voiture.modele, "</span>\n                        <span class=\"is-electric\">").concat(data.voiture.isElectric ? 'Electrique' : 'Thermique', "</span>\n                        <span class=\"places fw-bold\">").concat(data.voiture.places, " place").concat(data.voiture.places > 1 ? 's' : '', "</span>\n                    </div>\n                ");
        (0,_app__WEBPACK_IMPORTED_MODULE_0__.showSuccessAlert)('Voiture modifié avec succès');
      }
      initUserVoitureBtns(divToShowId, currentCarId);

      //lignes de code applicable a la page devenir chauffeur
      var hasVoitureInput = document.getElementById('devenir_chauffeur_hasVoiture');
      var voitureCards = document.querySelectorAll('.voiture-card');
      if (hasVoitureInput) {
        if (voitureCards.length > 0) {
          hasVoitureInput.checked = true;
          hasVoitureInput.dispatchEvent(new Event('input', {
            bubbles: true
          }));
        }
      }

      //appliquer fonction JS pour selection
    } else {
      var currentParentDiv = document.getElementById('body-content');
      currentDiv.remove();
      currentParentDiv.insertAdjacentHTML('beforeend', data.html);
      initAddVoitureFormBtns(divToShowId, currentCarId);
      initMarqueInputInteraction();
    }
  });
}
function initUserVoitureBtns(divToShowId) {
  var currentCarId = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;
  var userVoituresBtns = document.querySelectorAll(".voiture-card");
  var voitureInput = document.querySelector('.voiture-input');
  if (!currentCarId) {
    userVoituresBtns.forEach(function (voitureBtn) {
      if (voitureBtn.dataset.listenerAttached === 'true') {
        return; // Ne rien faire si déjà attaché
      }
      voitureBtn.addEventListener('click', function (e) {
        e.preventDefault();
        var currentVoitureId = voitureBtn.id;
        userVoituresBtns.forEach(function (voitureBtn) {
          return voitureBtn.classList.remove('selected');
        });
        this.classList.add('selected');
        voitureInput.value = currentVoitureId;
        //declenche event sur voiture manuellement
        var event = new Event("input", {
          bubbles: true
        });
        voitureInput.dispatchEvent(event);
        if (!window.location.href.includes('publier-trajet')) {
          showAddVoitureForm(divToShowId, voitureBtn.id);
        }
        voitureBtn.dataset.listenerAttached = 'true';
      });
    });
  }
}
function showAddVoitureForm(divToHideId) {
  var currentCarId = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;
  var addVoitureDiv = document.getElementById('add-voiture-section');
  if (addVoitureDiv) {
    addVoitureDiv.remove();
  }
  addVoiture(divToHideId, currentCarId);
}

/***/ })

}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,