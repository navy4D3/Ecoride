(self["webpackChunk"] = self["webpackChunk"] || []).push([["employe"],{

/***/ "./assets/js/employe.js":
/*!******************************!*\
  !*** ./assets/js/employe.js ***!
  \******************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

var _require = __webpack_require__(/*! ../app */ "./assets/app.js"),
  showPopup = _require.showPopup,
  hidePopup = _require.hidePopup;
var treatPositiveAvisBtns = document.querySelectorAll(".edit-avis-statut-btn");
var avisList = document.querySelector('.avis-section');
if (treatPositiveAvisBtns) {
  treatPositiveAvisBtns.forEach(function (btn) {
    btn.addEventListener('click', function (e) {
      e.preventDefault;
      var avisId = btn.dataset.avisId;
      var queryParameter = "";
      if (btn.classList.contains('visible')) {
        queryParameter = '?visible=true';
      }
      fetch('/avis/update-statut/' + avisId + queryParameter, {
        method: 'POST',
        headers: {
          'X-Requested-With': 'XMLHttpRequest' // important pour indiquer une requête AJAX
        }
      }).then(function (response) {
        return response.json();
      }).then(function (data) {
        if (data.statut == 'success') {
          var avisToHide = document.getElementById(avisId);
          avisToHide.remove();
          if (avisList.childElementCount < 1) {
            var element = document.createElement('p');
            element.innerHTML = "Aucun avis à traiter.";
            avisList.insertAdjacentElement('afterbegin', element);
          }
        }
      })["catch"](function (error) {
        return console.error('Erreur:', error);
      });
    });
  });
}
var treatNegativeAvisBtns = document.querySelector('.btns-section').querySelectorAll('button');
var treatPaiementPopup = document.getElementById('treat-paiement-popup');
var closeTreatPaiementPopupBtn = treatPaiementPopup.querySelector('.close-popup-btn');
var validerTraitementBtn = treatPaiementPopup.querySelector('.valider-traitement');
var avisVisibilityPopup = document.getElementById('avis-visibility-popup');
if (treatNegativeAvisBtns) {
  treatNegativeAvisBtns.forEach(function (btn) {
    btn.addEventListener('click', function () {
      var traitementTypeLabel = treatPaiementPopup.querySelector('.traitement-type');
      var paiementChauffeurLabel = treatPaiementPopup.querySelector('.chauffeur-paiement');
      var paiementPassagerLabel = treatPaiementPopup.querySelector('.passager-paiement');
      var finaliserTraitementBtns = document.querySelectorAll('.finaliser-traitement-btn');
      var coutTotalReservation = document.getElementById('cout-total-reservation').innerHTML;
      coutTotalReservation = coutTotalReservation.match(/(\d+)/)[0];
      if (btn.id == "valider") {
        traitementTypeLabel.innerHTML = "de valider";
        paiementChauffeurLabel.innerHTML = coutTotalReservation;
        paiementPassagerLabel.innerHTML = 0;
        finaliserTraitementBtns.forEach(function (btn) {
          return btn.href += "&type=valider";
        });
      } else if (btn.id == "equilibrer") {
        traitementTypeLabel.innerHTML = "d'equilibrer";
        paiementChauffeurLabel.innerHTML = Math.ceil(coutTotalReservation / 2);
        paiementPassagerLabel.innerHTML = Math.ceil(coutTotalReservation / 2);
        finaliserTraitementBtns.forEach(function (btn) {
          return btn.href += "&type=equilibrer";
        });
      } else {
        traitementTypeLabel.innerHTML = "de rembourser";
        paiementChauffeurLabel.innerHTML = 0;
        paiementPassagerLabel.innerHTML = coutTotalReservation;
        finaliserTraitementBtns.forEach(function (btn) {
          return btn.href += "&type=rembourser";
        });
      }
      paiementChauffeurLabel.innerHTML += " crédits";
      paiementPassagerLabel.innerHTML += " crédits";
      showPopup(treatPaiementPopup, 'flex');
    });
  });
}
if (closeTreatPaiementPopupBtn) {
  closeTreatPaiementPopupBtn.addEventListener('click', function () {
    hidePopup(treatPaiementPopup);
  });
}
if (validerTraitementBtn) {
  validerTraitementBtn.addEventListener('click', function () {
    hidePopup(treatPaiementPopup);
    showPopup(avisVisibilityPopup, 'flex');
  });
}

/***/ })

},
/******/ __webpack_require__ => { // webpackRuntimeModules
/******/ var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
/******/ __webpack_require__.O(0, ["assets_styles_app_scss","assets_app_js"], () => (__webpack_exec__("./assets/js/employe.js")));
/******/ var __webpack_exports__ = __webpack_require__.O();
/******/ }
]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,